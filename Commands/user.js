module.exports = {
    name: 'user',
    regex: /user/,
    desc: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ',
    args: ['[@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å | —Ç—ç–≥ | ID]'],
    example: 'user @—á–µ–ª#1234',
    run: async (message, args) => {
      const matchArgs = new RegExp(args[0], 'i');
      let member = message.mentions.members.first() || message.guild.members.cache.find(m => args[0] && m.user.tag.match(matchArgs));

      try {
        if (!member && args[0]) member = message.guild.member(await Bot.client.users.fetch(args[0], 1, 1));
      } catch {
        return Bot.err('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }

      if (!args[0]) member = message.member;

      const statesTranslation = {
        web: '–ë—Ä–∞—É–∑–µ—Ä–∞ üåê',
        desktop: '–ö–ª–∏–µ–Ω—Ç–∞ üñ•Ô∏è',
        mobile: '–¢–µ–ª–µ—Ñ–æ–Ω–∞ üì±'
      };

      const states = member.user.presence.clientStatus? Object.keys(member.user.presence.clientStatus).map(key => statesTranslation[key]) : ['–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ –∏–ª–∏ –æ—Ñ—Ñ–ª–∞–π–Ω ‚ùî'];

      let desc = `${member} ${Config.emojis[member.user.presence.clientStatus? Object.values(member.user.presence.clientStatus)[0] : 'offline']} **\`${member.user.tag}\`**\n`;
      desc += `–ê–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω: **${Func.toMoscowTime(member.user.createdAt)}**\n`;
      if (member) desc += `–ó–∞—à–µ–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä: **${Func.toMoscowTime(member.joinedAt)}**\n`;
      desc += `\n–°–∏–¥–∏—Ç —Å: **${states.join(', ')}**\n`

      const embed = new Bot.Discord.MessageEmbed()
      .setAuthor(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${member.user.tag}`, member.user.avatarURL())
      .setColor(Config.colors.blurple)
      .setThumbnail(member.user.avatarURL({size: 1024, dynamic: true}))
      .setDescription(desc);
      await message.channel.send({embed});
    }
  };
